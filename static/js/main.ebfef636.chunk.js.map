{"version":3,"sources":["Components/Item.js","Components/List.js","Components/Favorites.js","Components/FavItem.js","Components/DisplyFav.js","Components/FondData.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","this","setState","opacity","className","href","post","collectionViewUrl","target","src","artworkUrl100","collectionName","primaryGenreName","releaseDate","onClick","addToFav","class","type","id","name","value","for","title","React","Component","List","allItem","search","map","index","key","Favorites","Fav","adding","a","deleteItem","FavItem","DisplyFav","FavAlbum","FondData","adduser","dataBase","state","localStorage","setItem","JSON","stringify","nameHandleChange","e","preventDefault","passwordHandleChange","password","parse","getItem","onChange","handleFormSubmit","App","addItem","item","add","console","log","clearFav","filter","album","event","indexOf","splice","handleChange","searchTerm","Clicked","getAllPosts","axios","method","url","then","res","data","results","catch","err","newItem","size","placeholder","favorites","favoriteClick","getList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ebfef636.chunk.js","sourcesContent":["import React from 'react';\r\n// import Slider from 'react-rangeslider'\r\n// import Nouislider from 'react-nouislider';\r\n\r\n//Third Create Item Component\r\nexport default class Item extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n//Add 'componentWillMount()' \r\n    componentWillMount() {\r\n      this.setState({\r\n        opacity : 0.9 \r\n      });\r\n    }\r\n  \r\n\r\n\r\n//.......................................\r\n  render() {\r\n    return (\r\n\r\n//Create the main Div\r\n      <div className=\"post-item\">\r\n\r\n{/* Create Anchor tag for each item inside this details item  */}\r\n        <a \r\n        className=\"link\"  \r\n        href={ this.props.post.collectionViewUrl} target=\"_blank\">\r\n          \r\n          <img className=\"image\" src={this.props.post.artworkUrl100} /> \r\n          \r\n          <hr/>\r\n          \r\n          <p className=\"para\">Album Name:{this.props.post.collectionName}</p>          \r\n          <p className=\"para\">Genre Name:{this.props.post.primaryGenreName}</p>\r\n          <p className=\"para\">Date:{this.props.post.releaseDate}</p>\r\n        </a>\r\n\r\n           <br/>\r\n\r\n{/* Create button add to favorit */}\r\n        <button className=\"buttonFav\" onClick={()=>this.props.addToFav(this.props.post.collectionName)}>Favorite</button>\r\n\r\n           <br/>\r\n\r\n{/* Create div for Rating the item */}\r\n           <div class=\"rate\">\r\n             \r\n             <h1>Rating:</h1>\r\n             <input type=\"radio\" id=\"star5\" name=\"rate\" value=\"5\" />\r\n             <label for=\"star5\" title=\"text\">5 stars</label>\r\n             <input type=\"radio\" id=\"star4\" name=\"rate\" value=\"4\" />\r\n             <label for=\"star4\" title=\"text\">4 stars</label>\r\n             <input type=\"radio\" id=\"star3\" name=\"rate\" value=\"3\" />\r\n             <label for=\"star3\" title=\"text\">3 stars</label>\r\n             <input type=\"radio\" id=\"star2\" name=\"rate\" value=\"2\" />\r\n             <label for=\"star2\" title=\"text\">2 stars</label>\r\n             <input type=\"radio\" id=\"star1\" name=\"rate\" value=\"1\" />\r\n             <label for=\"star1\" title=\"text\">1 star</label>\r\n             \r\n           </div>\r\n          \r\n      </div>\r\n    );\r\n  }\r\n}  ","import React from 'react';\r\nimport Item from './Item';\r\n\r\n//Second Create List Component\r\nexport default class List extends React.Component {\r\n\r\n\r\n  render() {\r\n\r\n//Create map function \r\n    const allItem = this.props.search.map((post,index) => {\r\n      //  console.log(List)\r\n      //Call Item component \r\n      return <Item post={post} key={index} addToFav={this.props.addToFav}/>\r\n     });\r\n\r\n     //Call the map function\r\n    return (\r\n      <div className=\"post-list\">\r\n        {allItem}\r\n      </div>\r\n    );\r\n  } \r\n}\r\n","import React from 'react';\r\n\r\nconst Favorites = (props) =>{\r\n    // new array to be added and button to delete it\r\n    const Fav = props.adding.map((a,index)=>{\r\n        // return (\r\n        // <div> \r\n        //   <a key={index} className=\"music\" href={a} alt=\"\"/>\r\n        //   {/* <button onClick={()=>props.deleteItem(a)}>Delete Item</button> */}\r\n        //   {/* {this.props.post.collectionName} */}\r\n        // </div> \r\n        // )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {/* show the added list */}\r\n            {Fav}\r\n            {/* clear all the list */}\r\n            <button className='clearList' onClick={props.deleteItem}>Clear List!</button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Favorites;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {Component} from 'react';\r\n\r\n// class Favorites extends Component {\r\n\r\n//     removeAllOnClick = (e) => {\r\n//         e.stopPropagation()\r\n//         // console.log('on click work');\r\n//         this.props.removeAll()\r\n//     }\r\n\r\n\r\n//     render () {\r\n//         // console.log(this.props.favorites);\r\n        \r\n//         return(\r\n//             <div className='favoriteContainer'>\r\n//                 <div className='container'>\r\n\r\n//                 <list \r\n//                     favorites={this.props.favorites}\r\n//                     favoriteClick = {this.props.favoriteClick}/>\r\n\r\n//                 </div>\r\n\r\n//                 <button className=\"favButton\"\r\n//                         onClick = {this.removeAllOnClick}>\r\n//                     Clear\r\n//                 </button>\r\n                \r\n//             </div>\r\n            \r\n//         )\r\n\r\n        \r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export default Favorites;","import React from 'react';\r\n\r\n//Second Create List Component\r\nexport default class FavItem extends React.Component {\r\n  render() {\r\n\r\n//Create map function \r\n\r\n\r\n     //Call the map function\r\n    return (\r\n      <div >\r\n        {this.props.post}\r\n      </div>\r\n    );\r\n  } \r\n}\r\n","import React from 'react';\r\nimport FavItem from './FavItem';\r\n\r\n//Second Create List Component\r\nexport default class DisplyFav extends React.Component {\r\n  render() {\r\n\r\n//Create map function \r\n    const FavAlbum = this.props.Fav.map((post,index) => {\r\n      //  console.log(List)\r\n      //Call Item component \r\n      return <FavItem post={post} key={index} />\r\n     });\r\n\r\n     //Call the map function\r\n    return (\r\n      <div className=\"post-list\">\r\n       {FavAlbum}\r\n      </div>\r\n    );\r\n  } \r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FondData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataBase: JSON.parse(localStorage.getItem('user')),\r\n            name: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\nadduser=(name) =>{\r\n    this.setState({\r\n        dataBase: [...this.state.dataBase, name]\r\n        }, ()=> {\r\n            localStorage.setItem(\"user\",JSON.stringify(this.state.dataBase))\r\n        })\r\n    }\r\n \r\nnameHandleChange= (e)=> {\r\n    e.preventDefault()\r\n    this.setState( { name:e.target.value } );\r\n}\r\n\r\npasswordHandleChange= (e)=> {\r\n    e.preventDefault()\r\n    this.setState( { password:e.target.value } );\r\n}\r\n// // on form submit...\r\nhandleFormSubmit(e) {\r\n    e.preventDefault();\r\n    this.adduser(\r\n        {\r\n            'name':this.state.name,\r\n            'password':this.state.password,\r\n        }\r\n    )\r\n//    localStorage.setItem('user',JSON.stringify(this.state));\r\n}\r\n\r\n\r\n \r\n \r\nrender() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form >\r\n                <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"user\" className=\"form-control\" value={this.state.name} onChange={this.nameHandleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>PassWord</label>\r\n                    <input type=\"password\" name=\"password\" className=\"form-control\" value={this.state.password} onChange={this.passwordHandleChange} />\r\n                </div>\r\n                <button onClick={this.handleFormSubmit} type=\"submit\" className=\"btn btn-primary btn-block\">OK</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class FondData extends Component {\r\n//     state = {\r\n//       user: '',\r\n//       rememberMe: false\r\n//     };\r\n\r\n//     componentDidMount() {\r\n//         const rememberMe = localStorage.getItem('rememberMe') === 'true';\r\n//         const user = rememberMe ? localStorage.getItem('user') : '';\r\n//         this.setState({ user, rememberMe });\r\n//       }\r\n  \r\n//     handleChange = (event) => {\r\n//       const input = event.target;\r\n//       const value = input.type === 'checkbox' ? input.checked : input.value;\r\n  \r\n//       this.setState({ [input.name]: value });\r\n//     };\r\n  \r\n//     handleFormSubmit = () => {\r\n//         const { user, rememberMe } = this.state;\r\n//         localStorage.setItem('rememberMe', rememberMe);\r\n//         localStorage.setItem('user', rememberMe ? user : '');\r\n//       };\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//           <form onSubmit={this.handleFormSubmit}>\r\n//             <label>\r\n//               User: <input name=\"user\" value={this.state.user} onChange={this.handleChange}/>\r\n//             </label>\r\n//             <label>\r\n//               <input name=\"rememberMe\" \r\n//                      checked={this.state.rememberMe} \r\n//                      onChange={this.handleChange} \r\n//                      type=\"checkbox\"/> \r\n                          \r\n//                         Remember me\r\n//             </label>\r\n//             <button type=\"submit\">Sign In</button>\r\n//           </form>\r\n//         );\r\n//       }\r\n// }","import React from 'react';\nimport axios from 'axios';\n// import ls from 'local-storage';\n// import {reactLocalStorage} from 'reactjs-localstorage';\nimport List from './Components/List';\nimport Favorites from \"./Components/Favorites\";\nimport DisplyFav from './Components/DisplyFav';\nimport { FaGithub, FaEnvelope} from \"react-icons/fa\";\nimport FondData from './Components/FondData'\nimport './App.css';\n\n\n//First Create React App\n//& add the states\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      add: [],\n      searchTerm: '',\n      search: [],\n      newItem: '',\n      filter: 'none',\n    }\n  }\n\n//........................................\n//.................    Favorite Function   .......................//\n\n\n  \n  addItem = (item) =>{\n    this.setState({\n        add:[...this.state.add, item] // ... copy the array \n    })\n    console.log(this.state.add);\n  }\n  \n  clearFav = () =>{\n    // console.log(\"clicked\");\n    if( this.state.filter === 'none'){\n      this.setState({ filter:'display' });\n   }\n   else{\n       this.setState({ filter:'none' });\n   }\n  //  this.preventDefault.removeAll()\n    // this.setState({\n    //   add:[] // clear the list\n    // })\n  }\n\n  addToFav = (album) => {\n    console.log(album)\n    console.log(\"fff\")\n    this.setState({\n        add: [... this.state.add, album],\n    });\n    console.log(this.state.add[0])\n  }\n  \n  deleteItem = (event) =>{ // \n    console.log(\"clicked\");\n    console.log(event);\n    const add=[...this.state.add] // ... copy the array \n    const index = add.indexOf(event); // use the index to delete one item\n    add.splice(index,1) // delete it\n  \n    this.setState({add}) \n  }\n\n//........................................\n\n\n//Create function for search\n  handleChange = (event) =>{\n    event.preventDefault();\n    console.log(event.target.value);\n    this.setState({searchTerm: event.target.value})\n    \n  }\n\n//Add function for button when click search\n//& doesn't refresh the website\n  Clicked=(event)=>{\n    event.preventDefault()\n    this.setState({\n      searchTerm: event.target.value\n    })\n    this.getAllPosts()\n  }\n\n\n//Axios inside the function\n  getAllPosts = () => {\n    // event.preventDefault()\n    // console.log('getAllPosts');\n    axios({\n      method: 'get',\n      url: `https://itunes.apple.com/search?term=${this.state.searchTerm}}`\n    })\n      .then(res => {\n        console.log('RESPONSE: ', res);\n        console.log('DATA: ', res.data);\n        this.setState({ search: res.data.results});\n      })\n      .catch(err => {\n        console.log('ERROR: ', err);\n      });\n  };\n\n\n\n //........................................ \n\n  render() {\n    console.log(this);\n    \n    return (\n\n//Create the main Div\n      <div className=\"application\">\n\n        <FondData/>\n\n        <body>\n\n{/*Add favorite button & Call Favorites component */}\n<button className=\"FavButton\" onClick={this.clearFav} >Favorites</button>\n         <div className={`favorite-${this.state.filter}`}>\n\n\n          <DisplyFav Fav={this.state.add} />\n          </div>\n\n          \n          <div >\n            <Favorites \n             deleteItem={this.deleteItem} \n             clearFav={this.clearFav} \n             adding={this.state.add}/>\n          </div>\n          \n\n{/* Add title and paragraphs */}\n        <h1 className=\"title\">Itunes Search</h1>\n        <p className=\"title2\">You need listen to anything?</p>\n        <p className=\"title2\">Let's search for it ...</p>\n\n\n{/* add input search & button call the function ' Clicked() '  */}\n        <form >\n        <input className=\"input\"\n          type=\"text\"\n          size=\"60\"\n          placeholder=\"⌕\"\n          value={this.state.searchTerm}\n          onChange={this.handleChange}/>\n          <button className=\"button\"  onClick={this.Clicked}>Search</button>\n        </form>\n\n\n{/* Call List Component inside ul & Calling the state and axios */}\n        <ul className='container'>\n            <List \n              search={this.state.search} \n              favorites = {this.state.favorites}\n              favoriteClick = {this.favoriteClick}\n              getList= {() => this.getAllPosts()}\n              addToFav={this.addToFav}\n            />\n        </ul>\n\n\n{/* Add icon footer for Github and email */}\n        <footer>\n            <a href=\"https://github.com/Ranen-Khlabi\" target= \"_blank\"><FaGithub/></a>\n            <a href=\"Ranen-Alkhlabi@hotmail.com\" target= \"_blank\"><FaEnvelope/></a>\n          </footer>\n          </body>\n      </div>\n\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// class SignIn extends React.Component {\n//     state = {\n//       user: '',\n//       rememberMe: false\n//     };\n  \n//     componentDidMount() {\n//       const rememberMe = localStorage.getItem('rememberMe') === 'true';\n//       const user = rememberMe ? localStorage.getItem('user') : '';\n//       this.setState({ user, rememberMe });\n//     }\n  \n//     handleChange = (event) => {\n//       const input = event.target;\n//       const value = input.type === 'checkbox' ? input.checked : input.value;\n  \n//       this.setState({ [input.name]: value });\n//     };\n  \n//     handleFormSubmit = () => {\n//       const { user, rememberMe } = this.state;\n//       localStorage.setItem('rememberMe', rememberMe);\n//       localStorage.setItem('user', rememberMe ? user : '');\n//     };\n  \n//     render() {\n//       return (\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label>\n//             User: <input name=\"user\" value={this.state.user} onChange={this.handleChange} /></label>\n//           <label>\n//             <input name=\"rememberMe\" checked={this.state.rememberMe} onChange={this.handleChange} type=\"checkbox\" /> Remember me\n//           </label>\n//           <button type=\"submit\">Sign In</button>\n//         </form>\n//       );\n//     }\n  \n//   }\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<SignIn />, document.querySelector('#app-root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}